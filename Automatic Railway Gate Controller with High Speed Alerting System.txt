#include <Servo.h>

#define TRIGGER_PIN 2
#define ECHO_PIN 3
#define SERVO_PIN 4
#define LED_PIN 5

Servo servoMotor;
long previousMillis = 0;
long interval = 5000;  // 5 seconds interval for high-speed alert
int gateOpenDuration = 5000;  // 5 seconds gate open duration

void setup() {
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(LED_PIN, OUTPUT);
  servoMotor.attach(SERVO_PIN);
  servoMotor.write(0);  // Close the gate initially
  Serial.begin(9600);
}

void loop() {
  long currentMillis = millis();

  // Measure distance using ultrasonic sensor
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);
  long duration = pulseIn(ECHO_PIN, HIGH);
  float distance = duration * 0.034 / 2;  // Convert to cm

  Serial.print("Distance: ");
  Serial.println(distance);

  // Check if train is approaching
  if (distance < 100) {
    openGate();
    delay(gateOpenDuration);  // Keep gate open for specified duration
    closeGate();
    previousMillis = currentMillis;  // Reset the timer for high-speed alert
  }

  // Check for high-speed train passing
  if (currentMillis - previousMillis >= interval) {
    activateHighSpeedAlert();
    previousMillis = currentMillis;
  }
}

void openGate() {
  Serial.println("Opening Gate");
  servoMotor.write(90);  // Open the gate
  digitalWrite(LED_PIN, HIGH);  // Turn on LED
}

void closeGate() {
  Serial.println("Closing Gate");
  servoMotor.write(0);  // Close the gate
  digitalWrite(LED_PIN, LOW);  // Turn off LED
}

void activateHighSpeedAlert() {
  Serial.println("High-Speed Alert Activated!");
  digitalWrite(LED_PIN, HIGH);  // Flash LED for visual alert
  delay(1000);
  digitalWrite(LED_PIN, LOW);
  delay(1000);
  digitalWrite(LED_PIN, HIGH);
  delay(1000);
  digitalWrite(LED_PIN, LOW);
}
